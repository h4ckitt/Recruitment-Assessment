// Code generated by MockGen. DO NOT EDIT.
// Source: service/service_interface.go

// Package service_mock is a generated GoMock package.
package service_mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockNumberValidator is a mock of NumberValidator interface.
type MockNumberValidator struct {
	ctrl     *gomock.Controller
	recorder *MockNumberValidatorMockRecorder
}

// MockNumberValidatorMockRecorder is the mock recorder for MockNumberValidator.
type MockNumberValidatorMockRecorder struct {
	mock *MockNumberValidator
}

// NewMockNumberValidator creates a new mock instance.
func NewMockNumberValidator(ctrl *gomock.Controller) *MockNumberValidator {
	mock := &MockNumberValidator{ctrl: ctrl}
	mock.recorder = &MockNumberValidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNumberValidator) EXPECT() *MockNumberValidatorMockRecorder {
	return m.recorder
}

// GetCodeFromCountry mocks base method.
func (m *MockNumberValidator) GetCodeFromCountry(name string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCodeFromCountry", name)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCodeFromCountry indicates an expected call of GetCodeFromCountry.
func (mr *MockNumberValidatorMockRecorder) GetCodeFromCountry(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCodeFromCountry", reflect.TypeOf((*MockNumberValidator)(nil).GetCodeFromCountry), name)
}

// Validate mocks base method.
func (m *MockNumberValidator) Validate(arg0 string) (string, string, string, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Validate", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(string)
	ret3, _ := ret[3].(bool)
	return ret0, ret1, ret2, ret3
}

// Validate indicates an expected call of Validate.
func (mr *MockNumberValidatorMockRecorder) Validate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*MockNumberValidator)(nil).Validate), arg0)
}
